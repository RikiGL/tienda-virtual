import React, { useEffect, useState } from "react";
//import { useNavigate } from "react-router-dom";
import { useNavigate, useLocation } from "react-router-dom";
import fondo from "../imagenes/fondo212.jpg";
import "./cambio3.css";
import logo from "../imagenes/asdlogo.png";
import Modal from "../Modal/modal"; 

function CambioContrasena3() {
  const [contrase√±a, setContrase√±a] = useState("");
  const [confirmarContrase√±a, setConfirmarContrase√±a] = useState("");
  const [modalMessage, setModalMessage] = useState("");
  const navigate = useNavigate();
  const location = useLocation();
  // Recuperamos el email desde el estado de la navegaci√≥n
  const email = location.state?.email || "";

  const regexContrase√±a = /^(?=.*[a-zA-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

  useEffect(() => {
    const handlePopState = () => {
      navigate("/cambio"); 
    };

    window.addEventListener("popstate", handlePopState);

    return () => {
      window.removeEventListener("popstate", handlePopState);
    };
  }, [navigate]);

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!regexContrase√±a.test(contrase√±a)) {
      setModalMessage(
        "La contrase√±a no cumple con los requisitos. Por favor, revisa las indicaciones."
      );
      return;
    }

    if (contrase√±a !== confirmarContrase√±a) {
      setModalMessage("Las contrase√±as no coinciden. Por favor, verif√≠calas.");
      return;
    }

    try {
      // Enviar solo la nueva contrase√±a al backend
      const response = await fetch(`${process.env.REACT_APP_API_URL}clientes/cambio3`, {
        method: "PATCH",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, contrasenia: contrase√±a }),  // Cambiado a 'contrasenia'
      });

      const data = await response.json();

      if (response.ok) {
        setModalMessage("¬°Contrase√±a cambiada exitosamente!");
      } else {
        setModalMessage(data.message || "Error al cambiar la contrase√±a.");
      }
    } catch (error) {
      setModalMessage("Hubo un problema con el servidor. Int√©ntalo m√°s tarde.");
    }  
  };

  const closeModal = () => {
    if (modalMessage === "¬°Contrase√±a cambiada exitosamente!") {
      navigate("/login"); 
    }
    setModalMessage(""); 
  };

  const handleBack = () => {
    navigate("/cambio"); 
  };

  return (
    <div
      className="cambio3-change-password-container"
     
    >
      {}
      <header className="principal-app-header">
        <div className="principal-logo">
          <img src={logo} alt="Tu Despensa Logo" className="principal-logo-img" />
          <div className="principal-name-asd">TU DESPENSA üõí</div>
        </div>
      </header>

      {}
      <div className="cambio3-back-button-container">
        <button
          type="button"
          onClick={handleBack}
          className="cambio3-back-button"
        >
         ‚Üê Volver
        </button>
      </div>

      {}
      <main className="cambio3-change-password-main">
        <div className="cambio3-change-password-box">
        <div style={{ textAlign: 'center', marginBottom: '10px' }}>
  <img
    src="https://img.icons8.com/ios-filled/50/000000/lock--v1.png"
    alt="Password Icon"
    style={{ width: '30px', height: '30px' }}
  />
</div>

          <h2 className="cambio3-change-password-title">Ingrese su nueva contrase√±a</h2>
          <p className="password-reset-info">
          Cree una contrase√±a con:
            <ul className="styled-list">
              <li>8 o m√°s caracteres.</li>
              <li>Al menos una letra.</li>
              <li>Un n√∫mero.</li>
              <li>Un s√≠mbolo (@, $, !, %, *, ?, &).</li>
            </ul>
          </p>

          <form onSubmit={handleSubmit}>
            <div className="cambio3-input-group">
              <label htmlFor="contrase√±a" className="cambio3-input-label">
                Contrase√±a:
              </label>
              <input
                type="password"
                id="contrase√±a"
                value={contrase√±a}
                onChange={(e) => setContrase√±a(e.target.value)}
                placeholder="Ingresa tu contrase√±a"
                className="cambio3-input-field"
                required
              />
            </div>
            <div className="cambio3-input-group">
              <label htmlFor="confirmarContrase√±a" className="cambio3-input-label">
                Confirmar contrase√±a:
              </label>
              <input
                type="password"
                id="confirmarContrase√±a"
                value={confirmarContrase√±a}
                onChange={(e) => setConfirmarContrase√±a(e.target.value)}
                placeholder="Ingresa tu contrase√±a"
                className="cambio3-input-field"
                required
              />
            </div>
            <button type="submit" className="cambio3-change-password-button">
              Confirmar
            </button>
          </form>
        </div>
      </main>

      {}
      <footer className="cambio3-app-footer">
        <p>¬© 2024 TuDespensa. Todos los derechos reservados.</p>
        <p>Contacto: info@tudespensa.com</p>
      </footer>

      {}
      {modalMessage && <Modal message={modalMessage} onClose={closeModal} />}
    </div>
  );
}

export default CambioContrasena3;